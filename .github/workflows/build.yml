name: Build Application
on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install Node/Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Install Dependencies
        run: yarn install && yarn global add @quasar/cli
      - name: Build Application
        run: yarn quasar build -m electron

      - name: Zip Application (Linux & Mac)
        run: zip -r Pro7PresentationBuilder_${{ github.event.release.tag_name }}_${{ runner.os }}.zip dist/electron/Packaged/*
        if: runner.os != 'Windows'
      - name: Zip Application (Windows)
        run: Compress-Archive -Path dist\electron\Packaged\* -DestinationPath Pro7PresentationBuilder_${{ github.event.release.tag_name }}_${{ runner.os }}.zip
        if: runner.os == 'Windows'

      - name: Publish Asset
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} Pro7PresentationBuilder_${{ github.event.release.tag_name }}_${{ runner.os }}.zip
